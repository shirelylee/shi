Samantha interviews many candidates from different colleges using coding challenges 
and contests. Write a query to print the contest_id, hacker_id, name, and the sums of 
total_submissions, total_accepted_submissions, total_views, and total_unique_views for
 each contest sorted by contest_id. Exclude the contest from the result if all four sums are .

Note: A specific contest can be used to screen candidates at more than one college, but each 
college only holds  screening contest.
--------------------------------------------------------------------------------
select
con.contest_id,
con.hacker_id,
con.name,
c.total_submissions,
c.total_accepted_submissions,
c.total_views,
c.total_unique_views
from Contests con
left join
    (select contest_id,
    sum(total_submissions) as total_submissions,
    sum(total_accepted_submissions) as total_accepted_submissions,
    sum(total_views) as total_views,
    sum(total_unique_views) as total_unique_views
    from Colleges col
    left join
        (select 
        college_id,
        sum(total_views) as total_views,
        sum(total_unique_views) as total_unique_views
        from Challenges cha
        left join View_Stats vie
        on cha.challenge_id =vie.challenge_id 
        group by college_id )a
    on col.college_id=a.college_id
    left join
        (select 
        college_id,
        sum(total_submissions) as total_submissions,
        sum(total_accepted_submissions) as total_accepted_submissions
        from Challenges cha
        left join Submission_Stats sub
        on cha.challenge_id =sub.challenge_id 
        group by college_id )b
    on col.college_id=b.college_id
    group by contest_id)c    
on con.contest_id =c.contest_id 
having c.total_submissions!=0 or 
                c.total_accepted_submissions!=0 or
                c.total_views!=0 or
                c.total_unique_views!=0
order by con.contest_id